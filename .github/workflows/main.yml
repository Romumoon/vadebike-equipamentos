name: ci/cd

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Make mvnw executable
        run: chmod +x mvnw
        working-directory: ${{ github.workspace }}

      - name: Build project
        run: |
          ./mvnw clean install
        working-directory: ${{ github.workspace }}

      - name: Run tests
        run: |
          ./mvnw test
        working-directory: ${{ github.workspace }}

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: SonarCloud Scan
        run: |
          ./mvnw sonar:sonar -Dsonar.projectKey=<your-project-key> -Dsonar.organization=<your-organization-key> -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        working-directory: ${{ github.workspace }}

  deploy:
    env:
      PROJECT_ID: vadebike-es2 # TODO: update Google Cloud project id
      SERVICE: va-de-bike-equipamentos # TODO: update Cloud Run service name
      REGION: us-central1 # TODO: update Cloud Run service region

    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
    name: Deploy to Cloud Run from Source
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # NOTE: Alternative option - authentication via credentials json
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Deploy to Cloud Run
        id: deploy
        run: |
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud run deploy ${{ env.SERVICE }} --region ${{ env.REGION }} --source .
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
